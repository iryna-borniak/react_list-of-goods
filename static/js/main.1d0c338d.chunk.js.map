{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","setSortByAlphabet","setState","ALPHABET","setSortByLength","LENGTH","reverse","resetSort","this","reorderedGoods","goods","sort","GoodA","GoodB","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGW,SAARD,OAAQ,eAARA,IAAQ,uBAARA,IAAQ,oBAARA,MAAQ,KAoCN,IAAME,EAAG,iKA6BZ,OA7BY,oCACdC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MACnB,EAEFC,kBAAoB,WAClB,EAAKC,SAAS,CACZH,SAAUL,EAASS,YAErB,EAEFC,gBAAkB,WAChB,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAErB,EAEFC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAErB,EAEFS,UAAY,WACV,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAEf,EAyEA,OAzEA,mCAED,WACE,MAAiCU,KAAKX,MAA9BC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAEdU,EA5DH,SACLC,EAAgB,GAEf,IADCX,EAAQ,EAARA,SAgBF,OAdqB,YAAIW,GAAOC,MAAK,SAACC,EAAOC,GAC3C,OAAQd,GACN,KAAKL,EAASS,SACZ,OAAOS,EAAME,cAAcD,GAE7B,KAAKnB,EAASW,OACZ,OAAOO,EAAMG,OAASF,EAAME,QAAUH,EAAME,cAAcD,GAE5D,KAAKnB,EAASM,KACd,QACE,OAAO,MA8CYgB,CAAkBrB,EAAiB,CACxDI,aAOF,OAJID,GACFW,EAAeH,UAIf,sBAAKW,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,UAAS,UACtB,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYpB,IAAaL,EAASS,WAGtCiB,QAASZ,KAAKP,kBAAkB,iCAKlC,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYpB,IAAaL,EAASW,SAGtCe,QAASZ,KAAKJ,gBAAgB,4BAKhC,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAarB,IAGjBsB,QAASZ,KAAKF,QAAQ,sBAKtBP,GAAYD,IACZ,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASZ,KAAKD,UAAU,sBAO9B,6BACGE,EAAeY,KAAI,SAACC,GAAI,OACvB,oBAAe,UAAQ,OAAM,SAAEA,GAAtBA,eAKlB,EAtGa,CAASC,aCnDzBC,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,W","file":"static/js/main.1d0c338d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType }: ReorderOptions,\n) {\n  const visibleGoods = [...goods].sort((GoodA, GoodB) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return GoodA.localeCompare(GoodB);\n\n      case SortType.LENGTH:\n        return GoodA.length - GoodB.length || GoodA.localeCompare(GoodB);\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  setSortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  setSortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetSort = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const reorderedGoods = getReorderedGoods(goodsFromServer, {\n      sortType,\n    });\n\n    if (isReversed) {\n      reorderedGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.setSortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.setSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetSort}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {reorderedGoods.map((good) => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}